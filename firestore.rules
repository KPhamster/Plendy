rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /usernames/{username} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;

      match /categories/{categoryId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /color_categories/{colorCategoryId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /experiences/{experienceId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
                      request.resource.data.createdBy == request.auth.uid ||
                      exists(/databases/$(database)/documents/share_permissions/$(permissionId))
                       && get(/databases/$(database)/documents/share_permissions/$(permissionId)).data.itemId == experienceId
                       && get(/databases/$(database)/documents/share_permissions/$(permissionId)).data.sharedWithUserId == request.auth.uid
                       && get(/databases/$(database)/documents/share_permissions/$(permissionId)).data.accessLevel == 'edit'
                    );
      allow delete: if false;
    }

    match /public_experiences/{publicExperienceId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /sharedMediaItems/{mediaItemId} {
      allow read, write: if request.auth != null;
    }

    match /share_permissions/{permissionId} {
      allow read: if request.auth != null && (
                      resource.data.ownerUserId == request.auth.uid ||
                      resource.data.sharedWithUserId == request.auth.uid
                    );

      allow create: if request.auth != null &&
                      request.resource.data.ownerUserId == request.auth.uid;

      allow update: if request.auth != null &&
                      resource.data.ownerUserId == request.auth.uid &&
                      request.resource.data.diff(resource.data).affectedKeys()
                          .hasOnly(['accessLevel', 'updatedAt']);

      allow delete: if request.auth != null &&
                      resource.data.ownerUserId == request.auth.uid;
    }
  }
}